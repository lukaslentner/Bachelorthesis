%!PS-Adobe-2.0 EPSF-2.0
%%Title: Energy-Temperature.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Jun 30 20:23:03 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Energy-Temperature.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Lukas.Lentner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 30 20:23:03 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6)]
] -46.7 MRshow
1.000 UL
LTb
854 912 M
63 0 V
6073 0 R
-63 0 V
stroke
770 912 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5.5)]
] -46.7 MRshow
1.000 UL
LTb
854 1375 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1375 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
854 1839 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1839 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4.5)]
] -46.7 MRshow
1.000 UL
LTb
854 2302 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2302 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MRshow
1.000 UL
LTb
854 2766 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2766 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3.5)]
] -46.7 MRshow
1.000 UL
LTb
854 3229 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MRshow
1.000 UL
LTb
854 3693 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3693 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2.5)]
] -46.7 MRshow
1.000 UL
LTb
854 4156 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4156 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MRshow
1.000 UL
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1877 448 M
0 63 V
0 4109 R
0 -63 V
stroke
1877 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
2899 448 M
0 63 V
0 4109 R
0 -63 V
stroke
2899 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
3922 448 M
0 63 V
0 4109 R
0 -63 V
stroke
3922 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
4945 448 M
0 63 V
0 4109 R
0 -63 V
stroke
4945 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
5967 448 M
0 63 V
0 4109 R
0 -63 V
stroke
5967 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature)]
] -46.7 MCshow
LTb
3922 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Energy - Temperature)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6990 981 Pls
6980 952 Pls
6970 999 Pls
6959 942 Pls
6949 869 Pls
6939 1050 Pls
6929 1061 Pls
6918 917 Pls
6908 825 Pls
6898 959 Pls
6888 1040 Pls
6878 1233 Pls
6867 891 Pls
6857 1153 Pls
6847 998 Pls
6837 1194 Pls
6826 927 Pls
6816 848 Pls
6806 1065 Pls
6796 965 Pls
6785 1008 Pls
6775 1150 Pls
6765 1160 Pls
6755 1052 Pls
6745 791 Pls
6734 1001 Pls
6724 958 Pls
6714 982 Pls
6704 1146 Pls
6693 1056 Pls
6683 1016 Pls
6673 844 Pls
6663 1166 Pls
6653 880 Pls
6642 813 Pls
6632 1022 Pls
6622 924 Pls
6612 1030 Pls
6601 977 Pls
6591 1110 Pls
6581 1044 Pls
6571 1006 Pls
6560 933 Pls
6550 763 Pls
6540 1004 Pls
6530 901 Pls
6520 903 Pls
6509 1121 Pls
6499 841 Pls
6489 967 Pls
6479 1078 Pls
6468 1030 Pls
6458 938 Pls
6448 1015 Pls
6438 867 Pls
6428 957 Pls
6417 1116 Pls
6407 927 Pls
6397 1040 Pls
6387 921 Pls
6376 843 Pls
6366 1016 Pls
6356 806 Pls
6346 966 Pls
6335 868 Pls
6325 914 Pls
6315 855 Pls
6305 938 Pls
6295 935 Pls
6284 1024 Pls
6274 968 Pls
6264 1048 Pls
6254 919 Pls
6243 868 Pls
6233 1019 Pls
6223 839 Pls
6213 901 Pls
6203 884 Pls
6192 1017 Pls
6182 1060 Pls
6172 945 Pls
6162 1158 Pls
6151 962 Pls
6141 1027 Pls
6131 1000 Pls
6121 989 Pls
6111 933 Pls
6100 995 Pls
6090 1042 Pls
6080 899 Pls
6070 1032 Pls
6059 1003 Pls
6049 1013 Pls
6039 800 Pls
6029 925 Pls
6018 1115 Pls
6008 968 Pls
5998 1042 Pls
5988 993 Pls
5978 1010 Pls
5967 1053 Pls
5957 1026 Pls
5947 1071 Pls
5937 882 Pls
5926 1009 Pls
5916 814 Pls
5906 955 Pls
5896 996 Pls
5886 1041 Pls
5875 988 Pls
5865 839 Pls
5855 866 Pls
5845 1109 Pls
5834 873 Pls
5824 835 Pls
5814 920 Pls
5804 917 Pls
5793 980 Pls
5783 938 Pls
5773 980 Pls
5763 977 Pls
5753 957 Pls
5742 925 Pls
5732 892 Pls
5722 945 Pls
5712 1150 Pls
5701 992 Pls
5691 1030 Pls
5681 1030 Pls
5671 915 Pls
5661 947 Pls
5650 860 Pls
5640 979 Pls
5630 875 Pls
5620 910 Pls
5609 962 Pls
5599 1045 Pls
5589 799 Pls
5579 1042 Pls
5568 962 Pls
5558 979 Pls
5548 861 Pls
5538 945 Pls
5528 944 Pls
5517 904 Pls
5507 1029 Pls
5497 1061 Pls
5487 881 Pls
5476 913 Pls
5466 928 Pls
5456 1038 Pls
5446 944 Pls
5436 925 Pls
5425 940 Pls
5415 800 Pls
5405 977 Pls
5395 935 Pls
5384 949 Pls
5374 994 Pls
5364 840 Pls
5354 823 Pls
5344 971 Pls
5333 1000 Pls
5323 984 Pls
5313 921 Pls
5303 931 Pls
5292 970 Pls
5282 874 Pls
5272 912 Pls
5262 891 Pls
5251 897 Pls
5241 830 Pls
5231 1068 Pls
5221 958 Pls
5211 927 Pls
5200 882 Pls
5190 876 Pls
5180 904 Pls
5170 827 Pls
5159 872 Pls
5149 808 Pls
5139 869 Pls
5129 964 Pls
5119 814 Pls
5108 910 Pls
5098 878 Pls
5088 881 Pls
5078 875 Pls
5067 847 Pls
5057 967 Pls
5047 912 Pls
5037 952 Pls
5026 855 Pls
5016 897 Pls
5006 777 Pls
4996 852 Pls
4986 1024 Pls
4975 1044 Pls
4965 910 Pls
4955 982 Pls
4945 822 Pls
4934 796 Pls
4924 950 Pls
4914 979 Pls
4904 875 Pls
4894 886 Pls
4883 745 Pls
4873 937 Pls
4863 849 Pls
4853 836 Pls
4842 841 Pls
4832 856 Pls
4822 879 Pls
4812 842 Pls
4801 876 Pls
4791 887 Pls
4781 847 Pls
4771 869 Pls
4761 727 Pls
4750 710 Pls
4740 962 Pls
4730 859 Pls
4720 781 Pls
4709 828 Pls
4699 935 Pls
4689 965 Pls
4679 892 Pls
4669 800 Pls
4658 918 Pls
4648 766 Pls
4638 902 Pls
4628 860 Pls
4617 871 Pls
4607 855 Pls
4597 692 Pls
4587 930 Pls
4577 806 Pls
4566 953 Pls
4556 869 Pls
4546 884 Pls
4536 832 Pls
4525 789 Pls
4515 822 Pls
4505 926 Pls
4495 872 Pls
4484 815 Pls
4474 909 Pls
4464 831 Pls
4454 896 Pls
4444 898 Pls
4433 858 Pls
4423 847 Pls
4413 878 Pls
4403 814 Pls
4392 799 Pls
4382 675 Pls
4372 799 Pls
4362 806 Pls
4352 785 Pls
4341 847 Pls
4331 837 Pls
4321 864 Pls
4311 803 Pls
4300 801 Pls
4290 773 Pls
4280 820 Pls
4270 803 Pls
4259 743 Pls
4249 762 Pls
4239 812 Pls
4229 808 Pls
4219 828 Pls
4208 815 Pls
4198 809 Pls
4188 825 Pls
4178 898 Pls
4167 810 Pls
4157 761 Pls
4147 724 Pls
4137 834 Pls
4127 827 Pls
4116 797 Pls
4106 825 Pls
4096 821 Pls
4086 772 Pls
4075 774 Pls
4065 816 Pls
4055 801 Pls
4045 888 Pls
4034 826 Pls
4024 843 Pls
4014 742 Pls
4004 862 Pls
3994 823 Pls
3983 853 Pls
3973 715 Pls
3963 789 Pls
3953 819 Pls
3942 778 Pls
3932 783 Pls
3922 830 Pls
3912 851 Pls
3902 771 Pls
3891 776 Pls
3881 747 Pls
3871 827 Pls
3861 795 Pls
3850 754 Pls
3840 808 Pls
3830 746 Pls
3820 820 Pls
3810 821 Pls
3799 788 Pls
3789 741 Pls
3779 737 Pls
3769 712 Pls
3758 794 Pls
3748 772 Pls
3738 710 Pls
3728 787 Pls
3717 698 Pls
3707 852 Pls
3697 733 Pls
3687 804 Pls
3677 820 Pls
3666 783 Pls
3656 729 Pls
3646 725 Pls
3636 719 Pls
3625 717 Pls
3615 733 Pls
3605 761 Pls
3595 735 Pls
3585 732 Pls
3574 778 Pls
3564 791 Pls
3554 812 Pls
3544 766 Pls
3533 761 Pls
3523 766 Pls
3513 670 Pls
3503 712 Pls
3492 768 Pls
3482 799 Pls
3472 705 Pls
3462 789 Pls
3452 768 Pls
3441 669 Pls
3431 678 Pls
3421 701 Pls
3411 746 Pls
3400 713 Pls
3390 817 Pls
3380 694 Pls
3370 742 Pls
3360 685 Pls
3349 672 Pls
3339 740 Pls
3329 768 Pls
3319 760 Pls
3308 733 Pls
3298 752 Pls
3288 694 Pls
3278 703 Pls
3267 720 Pls
3257 637 Pls
3247 758 Pls
3237 758 Pls
3227 677 Pls
3216 714 Pls
3206 702 Pls
3196 751 Pls
3186 680 Pls
3175 665 Pls
3165 723 Pls
3155 639 Pls
3145 692 Pls
3135 677 Pls
3124 720 Pls
3114 738 Pls
3104 725 Pls
3094 733 Pls
3083 694 Pls
3073 755 Pls
3063 725 Pls
3053 703 Pls
3043 691 Pls
3032 665 Pls
3022 745 Pls
3012 723 Pls
3002 700 Pls
2991 763 Pls
2981 695 Pls
2971 685 Pls
2961 684 Pls
2950 708 Pls
2940 659 Pls
2930 698 Pls
2920 698 Pls
2910 687 Pls
2899 675 Pls
2889 705 Pls
2879 644 Pls
2869 667 Pls
2858 696 Pls
2848 676 Pls
2838 637 Pls
2828 623 Pls
2818 676 Pls
2807 656 Pls
2797 638 Pls
2787 663 Pls
2777 698 Pls
2766 701 Pls
2756 673 Pls
2746 683 Pls
2736 673 Pls
2725 689 Pls
2715 664 Pls
2705 675 Pls
2695 645 Pls
2685 673 Pls
2674 678 Pls
2664 640 Pls
2654 657 Pls
2644 674 Pls
2633 635 Pls
2623 672 Pls
2613 658 Pls
2603 661 Pls
2593 608 Pls
2582 642 Pls
2572 647 Pls
2562 649 Pls
2552 653 Pls
2541 662 Pls
2531 671 Pls
2521 629 Pls
2511 632 Pls
2500 671 Pls
2490 650 Pls
2480 644 Pls
2470 650 Pls
2460 646 Pls
2449 654 Pls
2439 642 Pls
2429 659 Pls
2419 682 Pls
2408 628 Pls
2398 627 Pls
2388 627 Pls
2378 645 Pls
2368 648 Pls
2357 618 Pls
2347 609 Pls
2337 626 Pls
2327 637 Pls
2316 631 Pls
2306 638 Pls
2296 639 Pls
2286 624 Pls
2276 644 Pls
2265 651 Pls
2255 626 Pls
2245 644 Pls
2235 613 Pls
2224 633 Pls
2214 624 Pls
2204 681 Pls
2194 668 Pls
2183 627 Pls
2173 626 Pls
2163 677 Pls
2153 641 Pls
2143 647 Pls
2132 654 Pls
2122 640 Pls
2112 629 Pls
2102 648 Pls
2091 651 Pls
2081 638 Pls
2071 646 Pls
2061 653 Pls
2051 649 Pls
2040 650 Pls
2030 678 Pls
2020 664 Pls
2010 640 Pls
1999 664 Pls
1989 665 Pls
1979 658 Pls
1969 692 Pls
1958 643 Pls
1948 657 Pls
1938 653 Pls
1928 673 Pls
1918 661 Pls
1907 680 Pls
1897 682 Pls
1887 686 Pls
1877 662 Pls
1866 674 Pls
1856 684 Pls
1846 663 Pls
1836 701 Pls
1826 683 Pls
1815 690 Pls
1805 684 Pls
1795 710 Pls
1785 693 Pls
1774 698 Pls
1764 687 Pls
1754 712 Pls
1744 730 Pls
1733 702 Pls
1723 739 Pls
1713 733 Pls
1703 731 Pls
1693 732 Pls
1682 743 Pls
1672 746 Pls
1662 755 Pls
1652 761 Pls
1641 763 Pls
1631 773 Pls
1621 769 Pls
1611 782 Pls
1601 792 Pls
1590 795 Pls
1580 797 Pls
1570 822 Pls
1560 820 Pls
1549 804 Pls
1539 827 Pls
1529 826 Pls
1519 838 Pls
1509 832 Pls
1498 852 Pls
1488 869 Pls
1478 875 Pls
1468 878 Pls
1457 871 Pls
1447 887 Pls
1437 913 Pls
1427 892 Pls
1416 920 Pls
1406 921 Pls
1396 947 Pls
1386 948 Pls
1376 952 Pls
1365 947 Pls
1355 979 Pls
1345 986 Pls
1335 996 Pls
1324 1008 Pls
1314 1016 Pls
1304 1025 Pls
1294 1036 Pls
1284 1060 Pls
1273 1066 Pls
1263 1075 Pls
1253 1097 Pls
1243 1096 Pls
1232 1126 Pls
1222 1136 Pls
1212 1133 Pls
1202 1146 Pls
1191 1167 Pls
1181 1169 Pls
1171 1192 Pls
1161 1202 Pls
1151 1206 Pls
1140 1227 Pls
1130 1245 Pls
1120 1248 Pls
1110 1265 Pls
1099 1276 Pls
1089 1286 Pls
1079 1297 Pls
1069 1308 Pls
1059 1321 Pls
1048 1333 Pls
1038 1346 Pls
1028 1346 Pls
1018 1350 Pls
1007 1356 Pls
997 1362 Pls
987 1377 Pls
977 1368 Pls
966 1378 Pls
956 1379 Pls
946 1373 Pls
936 1374 Pls
926 1370 Pls
915 1369 Pls
905 1363 Pls
895 1374 Pls
885 1383 Pls
874 2365 Pls
864 4162 Pls
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
