%!PS-Adobe-2.0 EPSF-2.0
%%Title: Energy-Temperature.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Tue Jul 12 04:29:47 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Energy-Temperature.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (lukaslentner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 12 04:29:47 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
518 448 M
63 0 V
6366 0 R
-63 0 V
stroke
434 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-7)]
] -46.7 MRshow
1.000 UL
LTb
518 1044 M
63 0 V
6366 0 R
-63 0 V
stroke
434 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6)]
] -46.7 MRshow
1.000 UL
LTb
518 1640 M
63 0 V
6366 0 R
-63 0 V
stroke
434 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
518 2236 M
63 0 V
6366 0 R
-63 0 V
stroke
434 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MRshow
1.000 UL
LTb
518 2831 M
63 0 V
6366 0 R
-63 0 V
stroke
434 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MRshow
1.000 UL
LTb
518 3427 M
63 0 V
6366 0 R
-63 0 V
stroke
434 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
518 4023 M
63 0 V
6366 0 R
-63 0 V
stroke
434 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
518 4619 M
63 0 V
6366 0 R
-63 0 V
stroke
434 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
518 448 M
0 63 V
0 4108 R
0 -63 V
stroke
518 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1322 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1322 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2125 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2125 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
2929 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2929 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
3733 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3733 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
4536 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4536 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
5340 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5340 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
6143 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6143 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3732 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature)]
] -46.7 MCshow
LTb
3732 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Energy - Temperature)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6947 4192 Pls
6931 4187 Pls
6915 4168 Pls
6899 4197 Pls
6883 4159 Pls
6867 4155 Pls
6851 4145 Pls
6834 4168 Pls
6818 4176 Pls
6802 4149 Pls
6786 4166 Pls
6770 4158 Pls
6754 4166 Pls
6738 4165 Pls
6722 4170 Pls
6706 4153 Pls
6690 4143 Pls
6674 4171 Pls
6658 4176 Pls
6642 4140 Pls
6626 4132 Pls
6609 4157 Pls
6593 4137 Pls
6577 4145 Pls
6561 4146 Pls
6545 4148 Pls
6529 4165 Pls
6513 4139 Pls
6497 4139 Pls
6481 4141 Pls
6465 4117 Pls
6449 4136 Pls
6433 4140 Pls
6417 4123 Pls
6401 4142 Pls
6384 4144 Pls
6368 4133 Pls
6352 4150 Pls
6336 4136 Pls
6320 4136 Pls
6304 4127 Pls
6288 4123 Pls
6272 4131 Pls
6256 4115 Pls
6240 4127 Pls
6224 4124 Pls
6208 4129 Pls
6192 4093 Pls
6176 4137 Pls
6159 4130 Pls
6143 4117 Pls
6127 4102 Pls
6111 4125 Pls
6095 4098 Pls
6079 4098 Pls
6063 4110 Pls
6047 4077 Pls
6031 4094 Pls
6015 4091 Pls
5999 4100 Pls
5983 4109 Pls
5967 4101 Pls
5951 4102 Pls
5934 4093 Pls
5918 4091 Pls
5902 4078 Pls
5886 4081 Pls
5870 4100 Pls
5854 4071 Pls
5838 4093 Pls
5822 4086 Pls
5806 4102 Pls
5790 4065 Pls
5774 4065 Pls
5758 4061 Pls
5742 4082 Pls
5725 4061 Pls
5709 4046 Pls
5693 4056 Pls
5677 4086 Pls
5661 4069 Pls
5645 4076 Pls
5629 4059 Pls
5613 4046 Pls
5597 4066 Pls
5581 4055 Pls
5565 4048 Pls
5549 4047 Pls
5533 4020 Pls
5517 4027 Pls
5500 4046 Pls
5484 4052 Pls
5468 4056 Pls
5452 4045 Pls
5436 4025 Pls
5420 4029 Pls
5404 4008 Pls
5388 4046 Pls
5372 4018 Pls
5356 4033 Pls
5340 4030 Pls
5324 4005 Pls
5308 3993 Pls
5292 4006 Pls
5275 4002 Pls
5259 3999 Pls
5243 4007 Pls
5227 4002 Pls
5211 4000 Pls
5195 4002 Pls
5179 3970 Pls
5163 3998 Pls
5147 3980 Pls
5131 4007 Pls
5115 3976 Pls
5099 3984 Pls
5083 4004 Pls
5067 4004 Pls
5050 3973 Pls
5034 3971 Pls
5018 3968 Pls
5002 3966 Pls
4986 3970 Pls
4970 3953 Pls
4954 3964 Pls
4938 3973 Pls
4922 3942 Pls
4906 3963 Pls
4890 3948 Pls
4874 3947 Pls
4858 3961 Pls
4842 3937 Pls
4825 3944 Pls
4809 3957 Pls
4793 3937 Pls
4777 3920 Pls
4761 3937 Pls
4745 3949 Pls
4729 3936 Pls
4713 3928 Pls
4697 3935 Pls
4681 3901 Pls
4665 3921 Pls
4649 3906 Pls
4633 3916 Pls
4616 3894 Pls
4600 3895 Pls
4584 3896 Pls
4568 3901 Pls
4552 3894 Pls
4536 3877 Pls
4520 3903 Pls
4504 3886 Pls
4488 3877 Pls
4472 3869 Pls
4456 3867 Pls
4440 3860 Pls
4424 3870 Pls
4408 3844 Pls
4391 3845 Pls
4375 3860 Pls
4359 3856 Pls
4343 3841 Pls
4327 3857 Pls
4311 3837 Pls
4295 3827 Pls
4279 3828 Pls
4263 3835 Pls
4247 3841 Pls
4231 3827 Pls
4215 3822 Pls
4199 3829 Pls
4183 3825 Pls
4166 3811 Pls
4150 3806 Pls
4134 3821 Pls
4118 3813 Pls
4102 3804 Pls
4086 3776 Pls
4070 3810 Pls
4054 3783 Pls
4038 3807 Pls
4022 3766 Pls
4006 3788 Pls
3990 3764 Pls
3974 3778 Pls
3958 3766 Pls
3941 3775 Pls
3925 3774 Pls
3909 3757 Pls
3893 3744 Pls
3877 3738 Pls
3861 3734 Pls
3845 3729 Pls
3829 3753 Pls
3813 3735 Pls
3797 3714 Pls
3781 3707 Pls
3765 3706 Pls
3749 3698 Pls
3733 3709 Pls
3716 3706 Pls
3700 3674 Pls
3684 3693 Pls
3668 3681 Pls
3652 3692 Pls
3636 3681 Pls
3620 3674 Pls
3604 3677 Pls
3588 3658 Pls
3572 3654 Pls
3556 3640 Pls
3540 3640 Pls
3524 3631 Pls
3507 3639 Pls
3491 3629 Pls
3475 3620 Pls
3459 3620 Pls
3443 3597 Pls
3427 3615 Pls
3411 3587 Pls
3395 3597 Pls
3379 3582 Pls
3363 3577 Pls
3347 3572 Pls
3331 3560 Pls
3315 3570 Pls
3299 3551 Pls
3282 3556 Pls
3266 3545 Pls
3250 3534 Pls
3234 3520 Pls
3218 3526 Pls
3202 3518 Pls
3186 3505 Pls
3170 3490 Pls
3154 3487 Pls
3138 3480 Pls
3122 3467 Pls
3106 3485 Pls
3090 3459 Pls
3074 3468 Pls
3057 3438 Pls
3041 3455 Pls
3025 3441 Pls
3009 3414 Pls
2993 3424 Pls
2977 3416 Pls
2961 3412 Pls
2945 3406 Pls
2929 3394 Pls
2913 3390 Pls
2897 3387 Pls
2881 3359 Pls
2865 3337 Pls
2849 3329 Pls
2832 3327 Pls
2816 3309 Pls
2800 3301 Pls
2784 3310 Pls
2768 3291 Pls
2752 3294 Pls
2736 3270 Pls
2720 3260 Pls
2704 3250 Pls
2688 3264 Pls
2672 3247 Pls
2656 3233 Pls
2640 3224 Pls
2623 3192 Pls
2607 3193 Pls
2591 3190 Pls
2575 3151 Pls
2559 3161 Pls
2543 3166 Pls
2527 3158 Pls
2511 3129 Pls
2495 3098 Pls
2479 3102 Pls
2463 3089 Pls
2447 3063 Pls
2431 3076 Pls
2415 3039 Pls
2398 3027 Pls
2382 3019 Pls
2366 3015 Pls
2350 3009 Pls
2334 2973 Pls
2318 2966 Pls
2302 2940 Pls
2286 2932 Pls
2270 2911 Pls
2254 2916 Pls
2238 2907 Pls
2222 2872 Pls
2206 2875 Pls
2190 2851 Pls
2173 2838 Pls
2157 2814 Pls
2141 2812 Pls
2125 2771 Pls
2109 2752 Pls
2093 2723 Pls
2077 2734 Pls
2061 2705 Pls
2045 2699 Pls
2029 2684 Pls
2013 2662 Pls
1997 2620 Pls
1981 2593 Pls
1965 2585 Pls
1948 2571 Pls
1932 2557 Pls
1916 2508 Pls
1900 2508 Pls
1884 2502 Pls
1868 2463 Pls
1852 2425 Pls
1836 2409 Pls
1820 2423 Pls
1804 2367 Pls
1788 2344 Pls
1772 2332 Pls
1756 2311 Pls
1740 2284 Pls
1723 2274 Pls
1707 2206 Pls
1691 2200 Pls
1675 2180 Pls
1659 2151 Pls
1643 2119 Pls
1627 2092 Pls
1611 2064 Pls
1595 2050 Pls
1579 1999 Pls
1563 1984 Pls
1547 1938 Pls
1531 1908 Pls
1514 1882 Pls
1498 1869 Pls
1482 1837 Pls
1466 1809 Pls
1450 1755 Pls
1434 1742 Pls
1418 1702 Pls
1402 1684 Pls
1386 1643 Pls
1370 1611 Pls
1354 1570 Pls
1338 1531 Pls
1322 1510 Pls
1306 1474 Pls
1289 1439 Pls
1273 1411 Pls
1257 1378 Pls
1241 1342 Pls
1225 1316 Pls
1209 1272 Pls
1193 1247 Pls
1177 1223 Pls
1161 1184 Pls
1145 1144 Pls
1129 1118 Pls
1113 1089 Pls
1097 1054 Pls
1081 1034 Pls
1064 992 Pls
1048 958 Pls
1032 933 Pls
1016 914 Pls
1000 881 Pls
984 850 Pls
968 825 Pls
952 811 Pls
936 780 Pls
920 765 Pls
904 740 Pls
888 715 Pls
872 692 Pls
856 676 Pls
839 657 Pls
823 641 Pls
807 626 Pls
791 622 Pls
775 607 Pls
759 588 Pls
743 579 Pls
727 570 Pls
711 557 Pls
695 549 Pls
679 542 Pls
663 527 Pls
647 525 Pls
631 516 Pls
614 510 Pls
598 506 Pls
582 500 Pls
566 500 Pls
550 500 Pls
534 500 Pls
% End plot #1
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
