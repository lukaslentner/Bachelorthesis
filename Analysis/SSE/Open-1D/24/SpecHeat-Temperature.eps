%!PS-Adobe-2.0 EPSF-2.0
%%Title: SpecHeat-Temperature.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Tue Jul 12 04:29:55 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (SpecHeat-Temperature.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (lukaslentner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 12 04:29:55 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 448 M
63 0 V
6282 0 R
-63 0 V
stroke
518 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MRshow
1.000 UL
LTb
602 1044 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
602 1640 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
602 2236 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
602 2831 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
602 3427 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MRshow
1.000 UL
LTb
602 4023 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MRshow
1.000 UL
LTb
602 4619 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
stroke
602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1395 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1395 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2188 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2188 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
2981 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2981 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
3775 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3775 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
4568 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4568 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
5361 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5361 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
6154 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6154 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Specific Heat)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature)]
] -46.7 MCshow
LTb
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Specific Heat - Temperature)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6947 1731 Pls
6931 1727 Pls
6915 1731 Pls
6899 1727 Pls
6884 1728 Pls
6868 1726 Pls
6852 1731 Pls
6836 1731 Pls
6820 1726 Pls
6804 1732 Pls
6788 1732 Pls
6773 1732 Pls
6757 1729 Pls
6741 1735 Pls
6725 1735 Pls
6709 1737 Pls
6693 1732 Pls
6677 1738 Pls
6661 1739 Pls
6646 1737 Pls
6630 1732 Pls
6614 1740 Pls
6598 1735 Pls
6582 1739 Pls
6566 1736 Pls
6550 1743 Pls
6535 1737 Pls
6519 1745 Pls
6503 1736 Pls
6487 1744 Pls
6471 1743 Pls
6455 1742 Pls
6439 1748 Pls
6424 1737 Pls
6408 1743 Pls
6392 1746 Pls
6376 1745 Pls
6360 1747 Pls
6344 1747 Pls
6328 1753 Pls
6313 1748 Pls
6297 1748 Pls
6281 1750 Pls
6265 1759 Pls
6249 1756 Pls
6233 1750 Pls
6217 1748 Pls
6201 1753 Pls
6186 1753 Pls
6170 1751 Pls
6154 1758 Pls
6138 1761 Pls
6122 1764 Pls
6106 1754 Pls
6090 1762 Pls
6075 1756 Pls
6059 1757 Pls
6043 1761 Pls
6027 1760 Pls
6011 1763 Pls
5995 1764 Pls
5979 1769 Pls
5964 1766 Pls
5948 1761 Pls
5932 1771 Pls
5916 1767 Pls
5900 1768 Pls
5884 1772 Pls
5868 1770 Pls
5852 1767 Pls
5837 1768 Pls
5821 1770 Pls
5805 1772 Pls
5789 1779 Pls
5773 1771 Pls
5757 1774 Pls
5741 1774 Pls
5726 1779 Pls
5710 1780 Pls
5694 1776 Pls
5678 1782 Pls
5662 1778 Pls
5646 1779 Pls
5630 1791 Pls
5615 1783 Pls
5599 1789 Pls
5583 1781 Pls
5567 1787 Pls
5551 1786 Pls
5535 1790 Pls
5519 1789 Pls
5504 1797 Pls
5488 1783 Pls
5472 1798 Pls
5456 1785 Pls
5440 1802 Pls
5424 1794 Pls
5408 1790 Pls
5392 1798 Pls
5377 1794 Pls
5361 1804 Pls
5345 1807 Pls
5329 1808 Pls
5313 1800 Pls
5297 1803 Pls
5281 1802 Pls
5266 1802 Pls
5250 1812 Pls
5234 1806 Pls
5218 1811 Pls
5202 1808 Pls
5186 1810 Pls
5170 1813 Pls
5155 1808 Pls
5139 1822 Pls
5123 1813 Pls
5107 1821 Pls
5091 1822 Pls
5075 1826 Pls
5059 1825 Pls
5043 1821 Pls
5028 1822 Pls
5012 1823 Pls
4996 1828 Pls
4980 1826 Pls
4964 1827 Pls
4948 1840 Pls
4932 1833 Pls
4917 1841 Pls
4901 1840 Pls
4885 1828 Pls
4869 1846 Pls
4853 1837 Pls
4837 1852 Pls
4821 1839 Pls
4806 1854 Pls
4790 1854 Pls
4774 1844 Pls
4758 1854 Pls
4742 1850 Pls
4726 1859 Pls
4710 1863 Pls
4695 1857 Pls
4679 1847 Pls
4663 1855 Pls
4647 1864 Pls
4631 1864 Pls
4615 1874 Pls
4599 1858 Pls
4583 1876 Pls
4568 1881 Pls
4552 1879 Pls
4536 1873 Pls
4520 1880 Pls
4504 1882 Pls
4488 1884 Pls
4472 1892 Pls
4457 1898 Pls
4441 1879 Pls
4425 1892 Pls
4409 1895 Pls
4393 1894 Pls
4377 1894 Pls
4361 1898 Pls
4346 1898 Pls
4330 1907 Pls
4314 1911 Pls
4298 1912 Pls
4282 1918 Pls
4266 1903 Pls
4250 1921 Pls
4235 1907 Pls
4219 1933 Pls
4203 1921 Pls
4187 1936 Pls
4171 1929 Pls
4155 1930 Pls
4139 1943 Pls
4123 1932 Pls
4108 1939 Pls
4092 1945 Pls
4076 1946 Pls
4060 1949 Pls
4044 1952 Pls
4028 1956 Pls
4012 1962 Pls
3997 1972 Pls
3981 1955 Pls
3965 1958 Pls
3949 1971 Pls
3933 1973 Pls
3917 1979 Pls
3901 1992 Pls
3886 1983 Pls
3870 1982 Pls
3854 1982 Pls
3838 1999 Pls
3822 2003 Pls
3806 2002 Pls
3790 2002 Pls
3775 2010 Pls
3759 2018 Pls
3743 2011 Pls
3727 2023 Pls
3711 2020 Pls
3695 2022 Pls
3679 2015 Pls
3663 2016 Pls
3648 2042 Pls
3632 2045 Pls
3616 2045 Pls
3600 2059 Pls
3584 2057 Pls
3568 2080 Pls
3552 2055 Pls
3537 2057 Pls
3521 2078 Pls
3505 2072 Pls
3489 2087 Pls
3473 2078 Pls
3457 2092 Pls
3441 2075 Pls
3426 2103 Pls
3410 2105 Pls
3394 2109 Pls
3378 2115 Pls
3362 2133 Pls
3346 2132 Pls
3330 2145 Pls
3314 2128 Pls
3299 2153 Pls
3283 2149 Pls
3267 2155 Pls
3251 2168 Pls
3235 2161 Pls
3219 2177 Pls
3203 2176 Pls
3188 2177 Pls
3172 2188 Pls
3156 2204 Pls
3140 2220 Pls
3124 2212 Pls
3108 2209 Pls
3092 2218 Pls
3077 2253 Pls
3061 2251 Pls
3045 2253 Pls
3029 2234 Pls
3013 2275 Pls
2997 2281 Pls
2981 2284 Pls
2966 2284 Pls
2950 2308 Pls
2934 2326 Pls
2918 2312 Pls
2902 2312 Pls
2886 2329 Pls
2870 2334 Pls
2854 2379 Pls
2839 2378 Pls
2823 2385 Pls
2807 2390 Pls
2791 2384 Pls
2775 2408 Pls
2759 2383 Pls
2743 2462 Pls
2728 2423 Pls
2712 2448 Pls
2696 2457 Pls
2680 2481 Pls
2664 2476 Pls
2648 2470 Pls
2632 2512 Pls
2617 2517 Pls
2601 2550 Pls
2585 2526 Pls
2569 2590 Pls
2553 2539 Pls
2537 2572 Pls
2521 2558 Pls
2505 2612 Pls
2490 2606 Pls
2474 2667 Pls
2458 2682 Pls
2442 2703 Pls
2426 2673 Pls
2410 2686 Pls
2394 2756 Pls
2379 2750 Pls
2363 2730 Pls
2347 2745 Pls
2331 2818 Pls
2315 2810 Pls
2299 2788 Pls
2283 2875 Pls
2268 2857 Pls
2252 2851 Pls
2236 2853 Pls
2220 2910 Pls
2204 2886 Pls
2188 2958 Pls
2172 2964 Pls
2157 3001 Pls
2141 3026 Pls
2125 2986 Pls
2109 3063 Pls
2093 3077 Pls
2077 3132 Pls
2061 3150 Pls
2045 3127 Pls
2030 3181 Pls
2014 3167 Pls
1998 3236 Pls
1982 3227 Pls
1966 3263 Pls
1950 3322 Pls
1934 3278 Pls
1919 3352 Pls
1903 3419 Pls
1887 3341 Pls
1871 3429 Pls
1855 3474 Pls
1839 3443 Pls
1823 3502 Pls
1808 3542 Pls
1792 3529 Pls
1776 3627 Pls
1760 3582 Pls
1744 3720 Pls
1728 3639 Pls
1712 3666 Pls
1697 3672 Pls
1681 3794 Pls
1665 3737 Pls
1649 3818 Pls
1633 3799 Pls
1617 3809 Pls
1601 3917 Pls
1585 3856 Pls
1570 3930 Pls
1554 3991 Pls
1538 3902 Pls
1522 4065 Pls
1506 4100 Pls
1490 4001 Pls
1474 3967 Pls
1459 3985 Pls
1443 4136 Pls
1427 4133 Pls
1411 4061 Pls
1395 4140 Pls
1379 4184 Pls
1363 4039 Pls
1348 3963 Pls
1332 4036 Pls
1316 4096 Pls
1300 4071 Pls
1284 4216 Pls
1268 4109 Pls
1252 4042 Pls
1237 4051 Pls
1221 4008 Pls
1205 4078 Pls
1189 3984 Pls
1173 3898 Pls
1157 3752 Pls
1141 3789 Pls
1125 3793 Pls
1110 3657 Pls
1094 3553 Pls
1078 3524 Pls
1062 3687 Pls
1046 3484 Pls
1030 3595 Pls
1014 3376 Pls
999 3149 Pls
983 3277 Pls
967 3161 Pls
951 3155 Pls
935 2955 Pls
919 3119 Pls
903 2852 Pls
888 2677 Pls
872 2519 Pls
856 2623 Pls
840 2744 Pls
824 2337 Pls
808 2081 Pls
792 2309 Pls
776 2384 Pls
761 1753 Pls
745 2266 Pls
729 2076 Pls
713 1844 Pls
697 2013 Pls
681 2618 Pls
665 2051 Pls
650 712 Pls
634 2109 Pls
618 2751 Pls
% End plot #1
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
