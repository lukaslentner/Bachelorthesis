%!PS-Adobe-2.0 EPSF-2.0
%%Title: SpecHeat-Temperature.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Tue Jul 12 04:29:12 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (SpecHeat-Temperature.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (lukaslentner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 12 04:29:12 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
518 448 M
63 0 V
6366 0 R
-63 0 V
stroke
434 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MRshow
1.000 UL
LTb
518 1143 M
63 0 V
6366 0 R
-63 0 V
stroke
434 1143 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
518 1838 M
63 0 V
6366 0 R
-63 0 V
stroke
434 1838 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
518 2533 M
63 0 V
6366 0 R
-63 0 V
stroke
434 2533 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
518 3229 M
63 0 V
6366 0 R
-63 0 V
stroke
434 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
518 3924 M
63 0 V
6366 0 R
-63 0 V
stroke
434 3924 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
518 4619 M
63 0 V
6366 0 R
-63 0 V
stroke
434 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
518 448 M
0 63 V
0 4108 R
0 -63 V
stroke
518 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1322 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1322 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2125 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2125 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
2929 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2929 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
3733 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3733 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
4536 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4536 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
5340 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5340 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
6143 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6143 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Specific Heat)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3732 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature)]
] -46.7 MCshow
LTb
3732 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Specific Heat - Temperature)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6947 2593 Pls
6931 2598 Pls
6915 2597 Pls
6899 2596 Pls
6883 2596 Pls
6867 2598 Pls
6851 2598 Pls
6834 2598 Pls
6818 2599 Pls
6802 2600 Pls
6786 2600 Pls
6770 2598 Pls
6754 2602 Pls
6738 2603 Pls
6722 2598 Pls
6706 2605 Pls
6690 2598 Pls
6674 2605 Pls
6658 2596 Pls
6642 2601 Pls
6626 2603 Pls
6609 2603 Pls
6593 2602 Pls
6577 2611 Pls
6561 2607 Pls
6545 2603 Pls
6529 2609 Pls
6513 2610 Pls
6497 2611 Pls
6481 2610 Pls
6465 2610 Pls
6449 2612 Pls
6433 2607 Pls
6417 2612 Pls
6401 2607 Pls
6384 2610 Pls
6368 2613 Pls
6352 2608 Pls
6336 2615 Pls
6320 2612 Pls
6304 2611 Pls
6288 2614 Pls
6272 2613 Pls
6256 2612 Pls
6240 2612 Pls
6224 2614 Pls
6208 2610 Pls
6192 2618 Pls
6176 2612 Pls
6159 2611 Pls
6143 2617 Pls
6127 2610 Pls
6111 2621 Pls
6095 2621 Pls
6079 2619 Pls
6063 2627 Pls
6047 2615 Pls
6031 2622 Pls
6015 2624 Pls
5999 2614 Pls
5983 2624 Pls
5967 2621 Pls
5951 2623 Pls
5934 2625 Pls
5918 2625 Pls
5902 2626 Pls
5886 2625 Pls
5870 2625 Pls
5854 2630 Pls
5838 2630 Pls
5822 2629 Pls
5806 2633 Pls
5790 2630 Pls
5774 2631 Pls
5758 2629 Pls
5742 2626 Pls
5725 2631 Pls
5709 2628 Pls
5693 2632 Pls
5677 2633 Pls
5661 2640 Pls
5645 2638 Pls
5629 2630 Pls
5613 2637 Pls
5597 2641 Pls
5581 2639 Pls
5565 2639 Pls
5549 2638 Pls
5533 2634 Pls
5517 2644 Pls
5500 2644 Pls
5484 2644 Pls
5468 2641 Pls
5452 2643 Pls
5436 2650 Pls
5420 2644 Pls
5404 2641 Pls
5388 2653 Pls
5372 2646 Pls
5356 2653 Pls
5340 2651 Pls
5324 2651 Pls
5308 2645 Pls
5292 2645 Pls
5275 2650 Pls
5259 2657 Pls
5243 2651 Pls
5227 2660 Pls
5211 2652 Pls
5195 2664 Pls
5179 2657 Pls
5163 2658 Pls
5147 2653 Pls
5131 2654 Pls
5115 2654 Pls
5099 2659 Pls
5083 2653 Pls
5067 2665 Pls
5050 2661 Pls
5034 2663 Pls
5018 2664 Pls
5002 2670 Pls
4986 2669 Pls
4970 2663 Pls
4954 2662 Pls
4938 2664 Pls
4922 2675 Pls
4906 2672 Pls
4890 2672 Pls
4874 2676 Pls
4858 2674 Pls
4842 2678 Pls
4825 2682 Pls
4809 2677 Pls
4793 2683 Pls
4777 2682 Pls
4761 2683 Pls
4745 2680 Pls
4729 2691 Pls
4713 2687 Pls
4697 2693 Pls
4681 2694 Pls
4665 2690 Pls
4649 2692 Pls
4633 2695 Pls
4616 2693 Pls
4600 2695 Pls
4584 2702 Pls
4568 2694 Pls
4552 2690 Pls
4536 2699 Pls
4520 2707 Pls
4504 2701 Pls
4488 2709 Pls
4472 2704 Pls
4456 2706 Pls
4440 2705 Pls
4424 2716 Pls
4408 2713 Pls
4391 2710 Pls
4375 2709 Pls
4359 2725 Pls
4343 2714 Pls
4327 2725 Pls
4311 2716 Pls
4295 2720 Pls
4279 2732 Pls
4263 2727 Pls
4247 2734 Pls
4231 2724 Pls
4215 2731 Pls
4199 2729 Pls
4183 2745 Pls
4166 2734 Pls
4150 2733 Pls
4134 2740 Pls
4118 2745 Pls
4102 2739 Pls
4086 2751 Pls
4070 2748 Pls
4054 2761 Pls
4038 2754 Pls
4022 2742 Pls
4006 2751 Pls
3990 2769 Pls
3974 2768 Pls
3958 2758 Pls
3941 2774 Pls
3925 2771 Pls
3909 2763 Pls
3893 2771 Pls
3877 2778 Pls
3861 2770 Pls
3845 2780 Pls
3829 2800 Pls
3813 2791 Pls
3797 2786 Pls
3781 2776 Pls
3765 2800 Pls
3749 2790 Pls
3733 2807 Pls
3716 2788 Pls
3700 2805 Pls
3684 2806 Pls
3668 2807 Pls
3652 2797 Pls
3636 2817 Pls
3620 2816 Pls
3604 2835 Pls
3588 2834 Pls
3572 2819 Pls
3556 2819 Pls
3540 2835 Pls
3524 2843 Pls
3507 2821 Pls
3491 2821 Pls
3475 2841 Pls
3459 2848 Pls
3443 2854 Pls
3427 2839 Pls
3411 2857 Pls
3395 2872 Pls
3379 2873 Pls
3363 2877 Pls
3347 2864 Pls
3331 2881 Pls
3315 2894 Pls
3299 2893 Pls
3282 2876 Pls
3266 2885 Pls
3250 2897 Pls
3234 2888 Pls
3218 2912 Pls
3202 2916 Pls
3186 2908 Pls
3170 2925 Pls
3154 2924 Pls
3138 2924 Pls
3122 2939 Pls
3106 2939 Pls
3090 2960 Pls
3074 2958 Pls
3057 2965 Pls
3041 2961 Pls
3025 2950 Pls
3009 2971 Pls
2993 2983 Pls
2977 2986 Pls
2961 2990 Pls
2945 2979 Pls
2929 3014 Pls
2913 2999 Pls
2897 3013 Pls
2881 3005 Pls
2865 3023 Pls
2849 3023 Pls
2832 3048 Pls
2816 3046 Pls
2800 3051 Pls
2784 3063 Pls
2768 3054 Pls
2752 3081 Pls
2736 3085 Pls
2720 3113 Pls
2704 3106 Pls
2688 3102 Pls
2672 3110 Pls
2656 3118 Pls
2640 3130 Pls
2623 3145 Pls
2607 3143 Pls
2591 3136 Pls
2575 3181 Pls
2559 3191 Pls
2543 3195 Pls
2527 3180 Pls
2511 3193 Pls
2495 3184 Pls
2479 3189 Pls
2463 3214 Pls
2447 3244 Pls
2431 3227 Pls
2415 3258 Pls
2398 3246 Pls
2382 3279 Pls
2366 3311 Pls
2350 3323 Pls
2334 3299 Pls
2318 3307 Pls
2302 3347 Pls
2286 3331 Pls
2270 3363 Pls
2254 3369 Pls
2238 3410 Pls
2222 3418 Pls
2206 3404 Pls
2190 3446 Pls
2173 3451 Pls
2157 3462 Pls
2141 3463 Pls
2125 3486 Pls
2109 3528 Pls
2093 3540 Pls
2077 3516 Pls
2061 3558 Pls
2045 3591 Pls
2029 3573 Pls
2013 3600 Pls
1997 3631 Pls
1981 3649 Pls
1965 3693 Pls
1948 3649 Pls
1932 3692 Pls
1916 3726 Pls
1900 3695 Pls
1884 3792 Pls
1868 3770 Pls
1852 3753 Pls
1836 3776 Pls
1820 3819 Pls
1804 3822 Pls
1788 3872 Pls
1772 3941 Pls
1756 3871 Pls
1740 3907 Pls
1723 3990 Pls
1707 4016 Pls
1691 3995 Pls
1675 4042 Pls
1659 4071 Pls
1643 4077 Pls
1627 4092 Pls
1611 4149 Pls
1595 4112 Pls
1579 4120 Pls
1563 4188 Pls
1547 4287 Pls
1531 4214 Pls
1514 4259 Pls
1498 4277 Pls
1482 4305 Pls
1466 4340 Pls
1450 4355 Pls
1434 4306 Pls
1418 4293 Pls
1402 4374 Pls
1386 4457 Pls
1370 4433 Pls
1354 4480 Pls
1338 4454 Pls
1322 4433 Pls
1306 4386 Pls
1289 4461 Pls
1273 4466 Pls
1257 4451 Pls
1241 4481 Pls
1225 4535 Pls
1209 4551 Pls
1193 4479 Pls
1177 4410 Pls
1161 4456 Pls
1145 4487 Pls
1129 4383 Pls
1113 4455 Pls
1097 4356 Pls
1081 4302 Pls
1064 4239 Pls
1048 4158 Pls
1032 4386 Pls
1016 4234 Pls
1000 4128 Pls
984 4138 Pls
968 4054 Pls
952 3964 Pls
936 4125 Pls
920 3839 Pls
904 3870 Pls
888 3918 Pls
872 3938 Pls
856 3690 Pls
839 3675 Pls
823 3562 Pls
807 3481 Pls
791 3586 Pls
775 3728 Pls
759 3431 Pls
743 3490 Pls
727 3378 Pls
711 3598 Pls
695 3425 Pls
679 2970 Pls
663 3289 Pls
647 2367 Pls
631 2612 Pls
614 2330 Pls
598 2547 Pls
582 3077 Pls
566 1930 Pls
550 1476 Pls
534 461 Pls
% End plot #1
1.000 UL
LTb
518 4619 N
518 448 L
6429 0 V
0 4171 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
