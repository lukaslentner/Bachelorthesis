%!PS-Adobe-2.0 EPSF-2.0
%%Title: Energy-Temperature.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Tue Jul 12 04:29:12 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Energy-Temperature.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (lukaslentner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 12 04:29:12 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3.5)]
] -46.7 MRshow
1.000 UL
LTb
686 1044 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3)]
] -46.7 MRshow
1.000 UL
LTb
686 1640 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2.5)]
] -46.7 MRshow
1.000 UL
LTb
686 2236 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
686 2831 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MRshow
1.000 UL
LTb
686 3427 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
686 4023 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MRshow
1.000 UL
LTb
686 4619 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
686 448 M
0 63 V
0 4108 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1469 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1469 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2251 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2251 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
3034 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3034 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3817 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
4599 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4599 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
5382 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5382 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
6164 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6164 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature)]
] -46.7 MCshow
LTb
3816 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Energy - Temperature)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6947 4219 Pls
6931 4175 Pls
6916 4194 Pls
6900 4207 Pls
6884 4199 Pls
6869 4176 Pls
6853 4199 Pls
6837 4179 Pls
6822 4199 Pls
6806 4202 Pls
6790 4191 Pls
6775 4192 Pls
6759 4209 Pls
6744 4163 Pls
6728 4193 Pls
6712 4185 Pls
6697 4218 Pls
6681 4199 Pls
6665 4197 Pls
6650 4183 Pls
6634 4175 Pls
6618 4177 Pls
6603 4158 Pls
6587 4156 Pls
6571 4165 Pls
6556 4183 Pls
6540 4161 Pls
6524 4150 Pls
6509 4181 Pls
6493 4152 Pls
6477 4134 Pls
6462 4140 Pls
6446 4154 Pls
6430 4154 Pls
6415 4180 Pls
6399 4158 Pls
6384 4149 Pls
6368 4171 Pls
6352 4144 Pls
6337 4163 Pls
6321 4156 Pls
6305 4130 Pls
6290 4185 Pls
6274 4156 Pls
6258 4157 Pls
6243 4160 Pls
6227 4150 Pls
6211 4136 Pls
6196 4148 Pls
6180 4130 Pls
6164 4153 Pls
6149 4160 Pls
6133 4130 Pls
6117 4147 Pls
6102 4106 Pls
6086 4136 Pls
6070 4156 Pls
6055 4132 Pls
6039 4106 Pls
6024 4158 Pls
6008 4125 Pls
5992 4130 Pls
5977 4139 Pls
5961 4121 Pls
5945 4156 Pls
5930 4117 Pls
5914 4132 Pls
5898 4128 Pls
5883 4099 Pls
5867 4110 Pls
5851 4109 Pls
5836 4082 Pls
5820 4118 Pls
5804 4118 Pls
5789 4107 Pls
5773 4117 Pls
5757 4106 Pls
5742 4137 Pls
5726 4087 Pls
5710 4073 Pls
5695 4058 Pls
5679 4080 Pls
5663 4124 Pls
5648 4087 Pls
5632 4071 Pls
5617 4107 Pls
5601 4083 Pls
5585 4123 Pls
5570 4079 Pls
5554 4085 Pls
5538 4085 Pls
5523 4070 Pls
5507 4053 Pls
5491 4065 Pls
5476 4060 Pls
5460 4073 Pls
5444 4081 Pls
5429 4043 Pls
5413 4057 Pls
5397 4047 Pls
5382 4050 Pls
5366 4027 Pls
5350 4030 Pls
5335 4048 Pls
5319 4078 Pls
5303 4037 Pls
5288 4050 Pls
5272 4046 Pls
5257 4036 Pls
5241 4036 Pls
5225 4061 Pls
5210 4020 Pls
5194 4016 Pls
5178 4051 Pls
5163 4037 Pls
5147 4027 Pls
5131 4071 Pls
5116 4007 Pls
5100 4049 Pls
5084 4019 Pls
5069 4030 Pls
5053 4003 Pls
5037 4001 Pls
5022 4028 Pls
5006 3998 Pls
4990 4025 Pls
4975 4007 Pls
4959 3986 Pls
4943 4003 Pls
4928 3973 Pls
4912 3975 Pls
4897 4002 Pls
4881 3992 Pls
4865 3990 Pls
4850 3974 Pls
4834 3968 Pls
4818 3998 Pls
4803 3998 Pls
4787 3989 Pls
4771 3987 Pls
4756 3959 Pls
4740 3959 Pls
4724 3942 Pls
4709 3973 Pls
4693 3951 Pls
4677 3964 Pls
4662 3949 Pls
4646 3950 Pls
4630 3944 Pls
4615 3963 Pls
4599 3938 Pls
4583 3919 Pls
4568 3967 Pls
4552 3931 Pls
4537 3916 Pls
4521 3927 Pls
4505 3939 Pls
4490 3942 Pls
4474 3897 Pls
4458 3935 Pls
4443 3910 Pls
4427 3913 Pls
4411 3903 Pls
4396 3894 Pls
4380 3895 Pls
4364 3896 Pls
4349 3888 Pls
4333 3900 Pls
4317 3884 Pls
4302 3897 Pls
4286 3870 Pls
4270 3864 Pls
4255 3865 Pls
4239 3877 Pls
4223 3869 Pls
4208 3872 Pls
4192 3837 Pls
4177 3854 Pls
4161 3847 Pls
4145 3840 Pls
4130 3841 Pls
4114 3848 Pls
4098 3877 Pls
4083 3839 Pls
4067 3820 Pls
4051 3827 Pls
4036 3830 Pls
4020 3794 Pls
4004 3802 Pls
3989 3828 Pls
3973 3797 Pls
3957 3810 Pls
3942 3799 Pls
3926 3803 Pls
3910 3764 Pls
3895 3792 Pls
3879 3777 Pls
3863 3795 Pls
3848 3755 Pls
3832 3783 Pls
3817 3736 Pls
3801 3782 Pls
3785 3737 Pls
3770 3755 Pls
3754 3737 Pls
3738 3752 Pls
3723 3738 Pls
3707 3717 Pls
3691 3718 Pls
3676 3693 Pls
3660 3706 Pls
3644 3722 Pls
3629 3680 Pls
3613 3697 Pls
3597 3695 Pls
3582 3728 Pls
3566 3709 Pls
3550 3674 Pls
3535 3643 Pls
3519 3666 Pls
3503 3661 Pls
3488 3635 Pls
3472 3661 Pls
3456 3638 Pls
3441 3664 Pls
3425 3631 Pls
3410 3639 Pls
3394 3606 Pls
3378 3632 Pls
3363 3627 Pls
3347 3622 Pls
3331 3618 Pls
3316 3617 Pls
3300 3565 Pls
3284 3620 Pls
3269 3570 Pls
3253 3558 Pls
3237 3571 Pls
3222 3541 Pls
3206 3544 Pls
3190 3541 Pls
3175 3510 Pls
3159 3522 Pls
3143 3518 Pls
3128 3529 Pls
3112 3501 Pls
3096 3476 Pls
3081 3498 Pls
3065 3475 Pls
3050 3484 Pls
3034 3471 Pls
3018 3477 Pls
3003 3428 Pls
2987 3435 Pls
2971 3432 Pls
2956 3418 Pls
2940 3397 Pls
2924 3395 Pls
2909 3384 Pls
2893 3370 Pls
2877 3386 Pls
2862 3351 Pls
2846 3351 Pls
2830 3342 Pls
2815 3320 Pls
2799 3326 Pls
2783 3324 Pls
2768 3296 Pls
2752 3310 Pls
2736 3284 Pls
2721 3297 Pls
2705 3286 Pls
2690 3243 Pls
2674 3243 Pls
2658 3228 Pls
2643 3204 Pls
2627 3209 Pls
2611 3226 Pls
2596 3207 Pls
2580 3191 Pls
2564 3171 Pls
2549 3168 Pls
2533 3124 Pls
2517 3127 Pls
2502 3123 Pls
2486 3119 Pls
2470 3104 Pls
2455 3093 Pls
2439 3078 Pls
2423 3058 Pls
2408 3056 Pls
2392 3024 Pls
2376 3033 Pls
2361 3007 Pls
2345 2989 Pls
2330 2960 Pls
2314 2949 Pls
2298 2948 Pls
2283 2932 Pls
2267 2899 Pls
2251 2882 Pls
2236 2856 Pls
2220 2836 Pls
2204 2838 Pls
2189 2781 Pls
2173 2797 Pls
2157 2783 Pls
2142 2757 Pls
2126 2776 Pls
2110 2751 Pls
2095 2696 Pls
2079 2666 Pls
2063 2683 Pls
2048 2660 Pls
2032 2642 Pls
2016 2611 Pls
2001 2596 Pls
1985 2588 Pls
1970 2564 Pls
1954 2513 Pls
1938 2523 Pls
1923 2477 Pls
1907 2441 Pls
1891 2426 Pls
1876 2428 Pls
1860 2384 Pls
1844 2370 Pls
1829 2340 Pls
1813 2316 Pls
1797 2280 Pls
1782 2262 Pls
1766 2217 Pls
1750 2212 Pls
1735 2177 Pls
1719 2166 Pls
1703 2129 Pls
1688 2094 Pls
1672 2089 Pls
1656 2018 Pls
1641 2006 Pls
1625 2000 Pls
1609 1933 Pls
1594 1920 Pls
1578 1887 Pls
1563 1873 Pls
1547 1832 Pls
1531 1783 Pls
1516 1762 Pls
1500 1742 Pls
1484 1702 Pls
1469 1661 Pls
1453 1625 Pls
1437 1599 Pls
1422 1548 Pls
1406 1514 Pls
1390 1485 Pls
1375 1453 Pls
1359 1412 Pls
1343 1387 Pls
1328 1369 Pls
1312 1336 Pls
1296 1302 Pls
1281 1258 Pls
1265 1237 Pls
1249 1203 Pls
1234 1171 Pls
1218 1125 Pls
1203 1101 Pls
1187 1082 Pls
1171 1057 Pls
1156 1028 Pls
1140 1002 Pls
1124 967 Pls
1109 923 Pls
1093 910 Pls
1077 883 Pls
1062 866 Pls
1046 828 Pls
1030 816 Pls
1015 807 Pls
999 788 Pls
983 759 Pls
968 747 Pls
952 728 Pls
936 707 Pls
921 692 Pls
905 674 Pls
889 665 Pls
874 646 Pls
858 638 Pls
843 624 Pls
827 617 Pls
811 615 Pls
796 604 Pls
780 597 Pls
764 596 Pls
749 596 Pls
733 595 Pls
717 596 Pls
702 596 Pls
% End plot #1
1.000 UL
LTb
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
